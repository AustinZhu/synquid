- Infer function search spaces from constants for bottom-up; block infeasible combinations right away
- Solve the whole disjunctive constraint and keep it (even better, trim it)

- Evaluation of disjunctive constraints: keep track of valid/invalid for each conjunct
- Data types

- Polymorphism
- Higher-order functions
- Parser for types and templates
- Explicit search

- Look at bad example for CEGIS: y >= x && x = i ==> y >= 5. Better when known lhs is stronger (y == x) or unknown lhs is weaker (x >= i) -> think about this
- Second solver for CEGIS
- Do we need multiple solutions for parameters? Do we need a lattice over them?
- Use optimization instead of UNSAT cores in CEGIS?
